
{
  "title":"Lecture 23: Complexity Classes Examples",
  "content":"Topics: String and List Examples, Analyzing Complexity, Search: indirection, linear search, bisection search\nViewing videos requires an internet connection View video page Download video Download transcript Lecture Notes Lecture 23: Complexity Classes Examples\nLecture 23 Code\nReadings Ch 12.1\nFinger Exercise Lecture 23 Question 1: Choose the worst case asymptotic order of growth (upper and lower bound) for the following function. Assume n = a.\ndef running_product(a): \u0026#34;\u0026#34;\u0026#34; a is an int \u0026#34;\u0026#34;\u0026#34; product = 1 for i in range(5,a+5): product *= i if product == a: return True return False Question 2: Choose the worst case asymptotic order of growth (upper and lower bound) for the following function. Assume n = len(L).\ndef tricky_f(L, L2): \u0026#34;\u0026#34;\u0026#34; L and L2 are lists of equal length \u0026#34;\u0026#34;\u0026#34; inL = False for e1 in L: if e1 in L2: inL = True inL2 = False for e2 in L2: if e2 in L: inL2 = True return inL and inL2 Question 3: Choose the worst-case asymptotic order of growth (upper and lower bound) for the following function.\ndef sum_f(n): \u0026#34;\u0026#34;\u0026#34; n \u0026gt; 0 \u0026#34;\u0026#34;\u0026#34; answer = 0 while n \u0026gt; 0: answer += n%10 n = int(n/10) return answer 6.100L Finger Exercises Lecture 23 Solutions\nRecitation 10 Recitations were smaller sections that reviewed the previous lectures. Files contain recitation notes and worked examples in code.\nRecitation 10 Notes and Code\n"}


