
{
  "title":"Calendar",
  "content":"In-person lectures were mandatory and occurred on Mondays and Wednesdays. Recitations were held on Fridays and were optional.\nFinger Ex. stands for \u0026ldquo;Finger Exercises\u0026rdquo; and \u0026ldquo;PS\u0026rdquo; stands for \u0026ldquo;Problem Set.\u0026rdquo;\nWeek # Monday Lecture Wednesday Lecture Recitations 1 No lecture. Lecture 1: Introduction to Python: knowledge, machines, objects, types, variables, bindings, IDEs\nReadings: Ch 1, Ch 2.1–2.2\nLecture 1 Finger Ex. handed out\nPS 0 out (not graded)\nRecitation 1 2 Lecture 2: Core Elements of Programs: strings, input/output, f-strings, operators, branching, indentation\nReadings: Ch 2.3–2.4\nLecture 2 Finger Ex. handed out\nLecture 1 Finger Ex. due\nPS 1 out\nLecture 3: Program Flow: control flow, loops\nReadings: Ch 2.5–2.8\nMicroquiz 1 (30 minutes in-class on your computer)\nLecture 3 Finger Ex. handed out\nLecture 2 Finger Ex. due\nRecitation 2 3 Lecture 4: Iteration, Simple Programs: guess and check, binary, fractions\nReadings: Ch 3.1, 3.3\nLecture 4 Finger Ex. handed out\nLecture 3 Finger Ex. due\nLecture 5: Simple Algorithms: approximation method, floats\nReadings: Ch 3.2–3.3\nMicroquiz 2 (30 minutes in-class on your computer)\nLecture 5 Finger Ex. handed out\nLecture 4 Finger Ex. due\nPS 1 halfway hand-in due\nNo recitation 4 Lecture 6: Simple Algorithms: bisection search, Newton-Raphson\nReadings: Ch 3.4–.5\nLecture 6 Finger Ex. handed out\nLecture 5 Finger Ex. due\nLecture 7: Functions: decomposition, abstraction, specifications\nReadings: Ch 4.1–4.2\nMicroquiz 3 (30 minutes in-class on your computer)\nLecture 7 Finger Ex. handed out\nLecture 6 Finger Ex. due\nRecitation 3 5 Lecture 8: Functions: environments, scope, functions as objects\nReadings: Ch 4.3–4.6\nLecture 8 Finger Ex. handed out\nLecture 7 Finger Ex. due\nLecture 9: Tuples and Lists\nReadings: Ch 5.1–5.3\nMicroquiz 4 (30 minutes in-class on your computer)\nLecture 9 Finger Ex. handed out\nLecture 8 Finger Ex. due\nPS 2 out\nPS 1 due\nRecitation 4 6 No lecture Lecture 10: List Operations, Mutability: mutation, aliasing, tricky examples with loops over L\nReadings: Ch 5.3–5.5\nLecture 10 Finger Ex. handed out\nLecture 9 Finger Ex. due\nPS 2 halfway hand-in due\nRecitation 5 7 Lecture 11: Aliasing and Cloning, List Comprehensions\nReadings: Ch 5.3–5.5\nMicroquiz 5 (30 minutes in-class on your computer)\nLecture 11 Finger Ex. handed out\nLecture 10 Finger Ex. due\nLecture 12: More Functions as Objects, Keyword Arguments, Default Arguments, Debugging: glass box/black box testing, examples\nReadings: Ch 4.4, Ch 8\nLecture 12 Finger Ex. handed out\nLecture 11 Finger Ex. due\nPS 3 out\nPS 2 due\nRecitation 6 8 Lecture 13: Exceptions, Assertions\nReadings: Ch 9\nMicroquiz 6 (30 minutes in-class on your computer)\nLecture 13 Finger Ex. handed out\nLecture 12 Finger Ex. due\nLecture 14: Dictionaries: keys, values, mutability, iteration over a dict, examples\nReadings: Ch 5.7\nLecture 14 Finger Ex. handed out\nLecture 13 Finger Ex. due\nPS 3 halfway hand-in due\nRecitation 7 9 Lecture 15: Recursion: iteration vs recursion, inductive reasoning\nReadings: Ch 6.1\nMicroquiz 7 (30 minutes in-class on your computer)\nLecture 15 Finger Ex. handed out\nLecture 14 Finger Ex. due\nLecture 16: Recursion: Fibonacci, Fibonacci with a dict, recursion on non-numerics, recursion on lists, Towers of Hanoi (extra)\nReadings: Ch 6.2–6.4 Lecture 16 Finger Ex. handed out\nLecture 15 Finger Ex. due\nPS 4 out\nPS 3 due\nRecitation 8 10 Lecture 17: Object Oriented Programming: data abstraction, class def, class instances, methods\nReadings: Ch 10.1\nMicroquiz 8 (30 minutes in-class on your computer)\nLecture 17 Finger Ex. handed out\nLecture 16 Finger Ex. due\nLecture 18: Object Oriented Programming: dunder methods, examples\nReadings: Ch 10.1\nLecture 18 Finger Ex. handed out\nLecture 17 Finger Ex. due\nPS 4 halfway hand-in due\nNo recitation 11 Lecture 19: Inheritance: hierarchies, subclasses, using inherited methods, examples\nReadings: Ch 10.2\nLecture 19 Finger Ex. handed out\nLecture 18 Finger Ex. due\nLecture 20: Inheritance: more examples\nReadings: Ch 10.4\nLecture 20 Finger Ex. handed out\nLec19 Finger Ex. due\nPS 5 out\nPS 4 due\nRecitation 9 12 Lecture 21: Complexity: measuring efficiency, timing programs, counting operations\nReadings: Ch 11\nMicroquiz 9 (45 minutes class on your computer)\nLecture 20 Finger Ex. due\nNo Lecture 21 Finger Ex.\nNo lecture No recitation 13 Lecture 22: Complexity: Big-Oh notation, Big-Theta notation, complexity relations and classes, calc-complexity\nReadings: Ch 11\nLecture 22 Finger Ex. handed out\nLecture 23: String and List Examples, Analyzing Complexity, Search: indirection, linear search, bisection search\nReadings: Ch 12.1\nLecture 23 Finger Ex. handed out\nLecture 22 Finger Ex. due\nPS 5 halfway hand-in due\nRecitation 10 14 Lecture 24: Sort: bogo, bubble, selection, merge sort\nReadings: Ch 12.2\nMicroquiz 10 (30 minutes in-class on your computer)\nLecture 23 Finger Ex. due\nNo Lecture 24 Finger Ex.\nLecture 25: Visualization Library\nReadings: Ch 13\nPS 5 due\nNo Lecture 25 Finger Ex.\nNo recitation 15 Lecture 26: Extras: lists in memory, hashing, simulations, wrap-up\nReadings: Ch 12.3, Ch 17\nNo Lecture 26 Finger Ex.\nNo lecture No recitation "}


